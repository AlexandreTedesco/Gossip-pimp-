/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS (and SCSS, if configured) file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */

body {
  font-family: Arial, sans-serif;
  color: rgb(239, 220, 248);
}

.contact-form {
  color: rgb(58, 52, 61);
}

h1 {
  color: rgb(221, 229, 230);
}

.contact-form {
  background-color: #dbd7d7f3;
  padding: 20px;
  border-radius: 5px;
}

.navbar {
  padding: 10px;
}

.pastel-blue {
  background-color: #aec6cf;
}

.pastel-pink {
  background-color: #ffb6c1;
}

.pastel-green {
  background-color: #b0e57c;
}

.pastel-yellow {
  background-color: #fdfd96;
}

.pastel-orange {
  background-color: #ffcccb;
}

.pastel-purple {
  background-color: #cbb2d4;
}

.card a {
  color: #fabdbd;
  text-decoration: none;
}

.card a:hover {
  text-decoration: underline;
}

.info_gossip {
  display:flex;
  justify-content: space-between;
  align-items:baseline;
}




@property --rotate {
  syntax: "<angle>";
  initial-value: 132deg;
  inherits: false;
}

:root {
  --card-height: 65vh;
  --card-width: calc(var(--card-height) / 1.5);
}


body {
  min-height: 100vh;
  background: #2b3149;
  display: flex;
  align-items: center;
  flex-direction: column;
  padding-top: 2rem;
  padding-bottom: 2rem;
  box-sizing: border-box;
}


.card {
  background: #2d3868;
  width: var(--card-width);
  height: var(--card-height);
  padding: 3px;
  position: relative;
  border-radius: 6px;
  justify-content:baseline;
  
  text-align:right;
  display: flex;
  font-size: 1.5em;
  color: rgb(88 199 250 / 0%);
  cursor: pointer;
  font-family: cursive;
}

.card:hover {
  color: rgb(88 199 250 / 100%);
  transition: color 1s;
}
.card:hover:before, .card:hover:after {
  animation: none;
  opacity: 0;
}


.card::before {
  content: "";
  width: 104%;
  height: 102%;
  border-radius: 8px;
  background-image: linear-gradient(
    var(--rotate)
    , #5ddcff, #3c67e3 43%, #4e00c2);
    position: absolute;
    z-index: -1;
    top: -1%;
    left: -2%;
    animation: spin 2.5s linear infinite;
}

.card::after {
  position: absolute;
  content: "";
  top: calc(var(--card-height) / 6);
  left: 0;
  right: 0;
  z-index: -1;
  height: 100%;
  width: 100%;
  margin: 0 auto;
  transform: scale(0.8);
  filter: blur(calc(var(--card-height) / 6));
  background-image: linear-gradient(
    var(--rotate)
    , #5ddcff, #3c67e3 43%, #4e00c2);
    opacity: 1;
  transition: opacity .5s;
  animation: spin 2.5s linear infinite;
}

@keyframes spin {
  0% {
    --rotate: 0deg;
  }
  100% {
    --rotate: 360deg;
  }
}

a {
  color: #212534;
  text-decoration: none;
  font-family: sans-serif;
  font-weight: bold;
  margin-top: 2rem;
}





.glow{
  padding:clamp(1rem,3vw,1rem);
  border:0px solid white;
  border-radius:1rem;
  position:relative;
  background-color:rgb( 52, 58, 64);
  margin:1rem;
  
}

:root{
  --azul:#0033ff;
  --violeta: #f700ff;
  --blanco: rgb(107, 252, 63);
  --deg:0deg;
    
}
@property --deg{
  syntax:'<angle>';
  inherits:false;
  initial-value:0deg;
}
.glow::after{
  
  content:'';
  border-radius:inherit;
  inset:-0.5rem;
  background-color:Red;
  position:absolute;
  z-index:-1;
  background:conic-gradient( from var(--deg),var(--azul),var(--violeta),var(--azul));
  animation:girar 3s linear infinite;
}

.glow::before{
  filter:blur(40px);
  --deg:0deg;
  content:'';
  border-radius:inherit;
  inset:-1.0rem;
  background-color:Red;
  position:absolute;
  z-index:-1;
  background:conic-gradient( from var(--deg),var(--azul),var(--violeta),var(--azul));
  animation:girar 3s linear infinite;
}


@keyframes girar {
  from{
    --deg:0deg;
  }
  
  to{
    --deg:360deg;
  }
}